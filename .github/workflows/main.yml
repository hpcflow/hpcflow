name: CI
on:
  workflow_dispatch:

jobs:
  ci:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.9] # [3.7, 3.8, 3.9]
        os: [windows-2019, ubuntu-18.04, macos-10.15]
        include:
          - os: windows-2019
            out-file: hpcflow.exe
          - os: ubuntu-18.04
            out-file: hpcflow
          - os: macos-10.15
            out-file: hpcflow

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install poetry
        run: |
          python -m pip install poetry==1.1.11

      - name: Configure poetry
        run: |
          poetry config virtualenvs.in-project true

      - name: Cache the virtualenv
        uses: actions/cache@v2
        with:
          path: ./.venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        run: |
          poetry install

      - name: Run tests
        run: |
          poetry run python -m pytest --verbose --exitfirst

      - name: Build with pyinstaller for ${{matrix.os}}
        run: |
          poetry run pyinstaller hpcflow/cli.py --name=hpcflow --onefile

      - name: Rename executable
        run: |
          mv dist/${{ matrix.out-file }} dist/${{ matrix.os }}-${{ matrix.python-version }}-${{ matrix.out-file }}

      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}-${{ matrix.python-version }}-${{ matrix.out-file }}
          path: dist/${{ matrix.os }}-${{ matrix.python-version }}-${{ matrix.out-file }}

      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}-${{ matrix.python-version }}-warn-hpcflow.txt
          path: build/hpcflow/warn-hpcflow.txt

      - uses: actions/download-artifact@v2
        with:
          name: ${{ matrix.os }}-${{ matrix.python-version }}-${{ matrix.out-file }}
          path: docs/executables

      - name: look at git
        run: |
          git status

      - uses: actions/checkout@v2
      - run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add docs/executables/${{ matrix.os }}-${{ matrix.python-version }}-${{ matrix.out-file }}
          git commit -m "generated"
          git push
